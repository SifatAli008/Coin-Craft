plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.14'
}

group = 'com.coincraft'
version = '1.0-SNAPSHOT'
description = 'Interactive Gamified Financial Literacy Platform for Kids'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        // Force compatible versions to resolve conflicts
        force 'com.google.guava:guava:32.1.3-jre'
        force 'com.google.protobuf:protobuf-java:3.24.4'
        force 'io.grpc:grpc-api:1.58.0'
        force 'io.grpc:grpc-core:1.58.0'
        force 'io.grpc:grpc-stub:1.58.0'
        force 'io.grpc:grpc-context:1.58.0'
        force 'io.grpc:grpc-protobuf:1.58.0'
        force 'io.grpc:grpc-protobuf-lite:1.58.0'
        force 'io.grpc:grpc-netty-shaded:1.58.0'
        force 'io.grpc:grpc-alts:1.58.0'
        force 'io.grpc:grpc-auth:1.58.0'
        force 'io.grpc:grpc-grpclb:1.58.0'
        force 'io.grpc:grpc-inprocess:1.58.0'
        force 'io.grpc:grpc-okhttp:1.58.0'
        force 'io.grpc:grpc-services:1.58.0'
        force 'io.grpc:grpc-testing:1.58.0'
        force 'io.grpc:grpc-xds:1.58.0'
        
        // Exclude problematic transitive dependencies
        exclude group: 'com.google.guava', module: 'guava-jre5'
        exclude group: 'com.google.guava', module: 'guava-android'
    }
}

ext {
    javafxVersion = '19.0.2.1'
    firebaseVersion = '9.2.0'
    junitVersion = '5.9.3'
    testfxVersion = '4.0.16-alpha'
}

dependencies {
    // JavaFX Dependencies
    implementation "org.openjfx:javafx-base:${javafxVersion}"
    implementation "org.openjfx:javafx-controls:${javafxVersion}"
    implementation "org.openjfx:javafx-fxml:${javafxVersion}"
    implementation "org.openjfx:javafx-media:${javafxVersion}"
    implementation "org.openjfx:javafx-graphics:${javafxVersion}"

    // Firebase Dependencies - Using compatible versions
    implementation "com.google.firebase:firebase-admin:${firebaseVersion}"
    implementation 'com.google.cloud:google-cloud-storage:2.21.0'
    
    // Guava for compatibility
    implementation 'com.google.guava:guava:32.1.3-jre'
    
    // Firebase HTTP client (simpler alternative)
    implementation 'com.google.http-client:google-http-client:1.43.3'
    
    // Additional Firebase dependencies
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.19.0'
    
    // Google OAuth2 Dependencies
    implementation 'com.google.oauth-client:google-oauth-client-java6:1.34.1'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-oauth2:v2-rev20200213-2.0.0'
    
    // Google API Client
    implementation 'com.google.api-client:google-api-client:2.2.0'
    
    // HTTP Client for Firebase REST API
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    
    // OkHttp additional dependencies
    implementation 'com.squareup.okio:okio:3.4.0'

    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.8'

    // WebSocket Support
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'

    // UI/UX Enhancements
    implementation 'org.controlsfx:controlsfx:11.2.1'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-material2-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1'
    implementation 'io.github.typhon0:AnimateFX:1.2.2'

    // Testing Dependencies
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.testfx:testfx-junit5:${testfxVersion}"
}

javafx {
    version = "${javafxVersion}"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.graphics']
}

application {
    mainClass = 'com.coincraft.CoinCraftApplication'
}

test {
    useJUnitPlatform()
}

// Configure JVM arguments for JavaFX
run {
    jvmArgs = [
        '--add-opens', 'javafx.controls/javafx.scene.control=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene.traversal=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene.text=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene.shape=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.sg.prism.web=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.paint=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.paint.gradient=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.paint.image=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.shape=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.text=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.text.measure=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.text.tess=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.es2=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.d3d=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.prism.sw=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.image=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.geom.transform=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.util=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.application=ALL-UNNAMED',
        // Performance optimizations
        '-Xmx2g',
        '-XX:+UseG1GC',
        '-Djava.awt.headless=false',
        '-Dfile.encoding=UTF-8'
    ]
    // Enable debugging
    if (project.hasProperty('debug')) {
        jvmArgs += [
            '-Djavafx.debug=true',
            '-Dprism.verbose=true',
            '-Dprism.dirtyopts=false'
        ]
    }
}

// Ensure proper encoding
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Create a task to clean build directory (equivalent to mvn clean)
task cleanBuild(type: Delete) {
    delete 'build'
}

// Create a task that combines clean and build
task rebuild {
    dependsOn cleanBuild, build
}

// Configure JAR task
jar {
    manifest {
        attributes(
            'Main-Class': 'com.coincraft.CoinCraftApplication',
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'CoinCraft Team'
        )
    }
    
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
